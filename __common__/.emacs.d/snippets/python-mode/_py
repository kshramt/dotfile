# -*- mode: snippet -*-
# name: py
# key: _py
# --
#!/usr/bin/python3

import argparse
import collections
import datetime
import logging
import os
import sys
# import pickle

# import numpy as np
# import scipy as sp
# import matplotlib.pyplot as plt
# import pandas as pd


__version__ = "0.1.0"
logger = logging.getLogger(__name__)


def main(argv):
    args = _parse_argv(argv[1:])
    _add_handlers(logger, args.log_file, level_stderr=args.log_level)
    logger.debug(f"args\t{args}")$0
    run()


def run():
    pass


def _parse_argv(argv):
    logger.debug(f"argv\t{argv}")
    doc = f"""
    {__file__}
    """

    parser = argparse.ArgumentParser(doc, formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument("--version", action="version", version=f"%(prog)s {__version__}")
    parser.add_argument("--log_level", default="warning", type=lambda x: getattr(logging, x.upper()), help="Set log level.")
    parser.add_argument("--log_file", default=os.path.join(os.environ["HOME"], "d", "trash", "logging.py", datetime.datetime.now().strftime("%y%m%d%H%M%S") + "_" + str(os.getpid()) + "_" + os.path.basename(__file__) + ".log"), help="Set log file.")
    args = parser.parse_args(argv)
    logger.debug(f"args\t{args}")
    return args


def _add_handlers(logger, path, level_stderr=logging.INFO, level_path=logging.DEBUG):
    logger.setLevel(logging.DEBUG)
    fmt = logging.Formatter("%(levelname)s\t%(process)d\t%(asctime)s\t%(filename)s\t%(funcName)s\t%(lineno)d\t%(message)s")

    hdl = logging.StreamHandler(sys.stderr)
    hdl.setFormatter(fmt)
    hdl.setLevel(level_stderr)
    logger.addHandler(hdl)

    mkdir(dirname(path))
    hdl = logging.FileHandler(path)
    hdl.setFormatter(fmt)
    hdl.setLevel(level_path)
    logger.addHandler(hdl)

    logger.info(f"log file\t{path}")
    return logger


def _conf_of(**kwargs):
    return collections.namedtuple("_Conf", kwargs.keys())(**kwargs)


def mkdir(path):
    os.makedirs(path, exist_ok=True)


def dirname(path):
    return os.path.dirname(path) or os.path.curdir


if __name__ == "__main__":
    main(sys.argv)
